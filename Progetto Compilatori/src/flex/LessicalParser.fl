/* ------------------------------ */
/* -------- DECLARATION: -------- */
/* ------------------------------ */
/*C segments: */
%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h> 
#include "../bison/SintaticsParser.tab.h" 
%}

/*Options: */
%option outfile = "LessicalParser.c"
%option noyywrap

/*Regular definitions:*/
digit   [0-9]
number  {digit}+
char    [a-z]
CHAR    [A-Z]
month   {digit}{2}
year    {digit}{4}

DATE    {month}-{year}
SEP1    ^&&&$
ROOM    {CHAR}{char}*
SEP2    ^!!!$

agency  ({CHAR}|{char}){char}*

AGENCY  \"({agency})([ ]*({agency}))*\"
AGCODE  {digit}{4}\/{CHAR}{2}
PAR_OP  \(
PAR_CL  \)
COMMA   \;[ ]


/* ------------------------------ */
/* ----- TRANSLATION RULES: ----- */
/* ------------------------------ */
%%

{DATE}              {int date[2];
                     date[0] = atoi(strtok(yytext,"-"));
                     date[1] = atoi(strtok(NULL,"-"));
                     yylval.int_vec = date; printf("DATE\n"); return DATE;}
{SEP1}              {yylval.string = yytext; printf("SEP1\n"); return SEP1;}
{ROOM}              {yylval.string = yytext; printf("ROOM\n"); return ROOM;}
[ ]->[ ]            {yylval.string = yytext; printf("ARROW\n"); return ARROW;}
{SEP2}              {yylval.string = yytext; printf("SEP2\n"); return SEP2;}
{AGENCY}            {yylval.string = yytext; printf("AGENCY\n"); return AGENCY;}
{AGCODE}            {yylval.string = yytext; printf("AGENCY_CODE: %s\n",yytext); return AGCODE;}
{number}            {yylval.integer = atoi(yytext); printf("NUMBER\n"); return NUMBER;}
{PAR_OP}            {yylval.string = yytext; printf("PAR_OP\n"); return PAR_OP;}
{PAR_CL}            {yylval.string = yytext; printf("PAR_CL\n"); return PAR_CL;}
[ ]>[ ]             {yylval.string = yytext; printf("MAJOR\n"); return MAJOR;}
{COMMA}             {yylval.string = yytext; printf("COMMA\n"); return COMMA;}
[ ]-[ ]             {yylval.string = yytext; printf("MINUS\n"); return MINUS;}

%%
/* ------------------------------ */
/* --- AUXILIARIES FUNCTIONS: --- */
/* ------------------------------ */


